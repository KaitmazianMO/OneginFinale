#pragma once

#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>
#include <time.h>

const int EMPTY = -1;

#define min(A, B) (A) < (B) ? (A) : (B)

//{----------------------------------------------------------------------------
//! \brief Считает количество вхождений символа в массиве.
//!
//! \param [in] Array- массив, в котором производится поиск;
//! \param [in] c    - искомый символ;
//! \param [in] size - размер массива;
//!
//! \return Количество вхождений символа в массив.
//}----------------------------------------------------------------------------

size_t count      (const char *Array, size_t size, char sym);

//{----------------------------------------------------------------------------
//! \brief Считает количество символов файле.
//!
//! \param [in] file - файл, в котором считается количество символов;
//!
//! \return Количество символов файле.
//}----------------------------------------------------------------------------

size_t SizeOfFile (FILE *file);

//{----------------------------------------------------------------------------
//! \brief Записывает в файл текст, обрамляя его полосками.
//!
//! \param [in] file - файл, в который производится запись;
//! \param [in] str  - записываемый текст;
//}----------------------------------------------------------------------------

void   PrintTitle (FILE* file, const char *str);

//{----------------------------------------------------------------------------
//! Структура строки.
//}----------------------------------------------------------------------------

typedef struct string
    {
    const char *begin = NULL;    ///< указатель на начало строки;
    size_t size       = 0;       ///< размер строки;
    };

//{----------------------------------------------------------------------------
//! \brief Заполняет массив строк, используя массив символов.
//!
//! \param [in] str    - указаетль на начало массива строк,
//!                      в который ведется запись;
//! \param [in] nLines - размер массива строк;
//! \param [in] ch     - указаетль на начало массива символов,
//!                      из которого ведется запись;
//! \param [in] nChars - размер масива символов;
//!
//! \return Количество записанных в массив строк.
//}----------------------------------------------------------------------------

int    GetStrings     (string     *str, size_t nLines,
                       const char *ch,  size_t nChars);

//{----------------------------------------------------------------------------
//! \brief Записывает сожержимое массива строк в файл.
//!
//! \param [in] str    - указаетль на начало массива строк,
//!                      из которого ведется запись;
//! \param [in] nLines - размер массива строк;
//! \param [in] file   - файл, в который ведется запись;
//}----------------------------------------------------------------------------

void   WriteToFile    (const string* str, size_t nLines, FILE *file);

//{----------------------------------------------------------------------------
//! Относительно случайно записывает рифмованные строки в файл.
//}----------------------------------------------------------------------------

void   PrintRhymes    (const string *text, size_t nLines, FILE *file);

//{----------------------------------------------------------------------------
//! Сравнивает строки с конца, игнорируя знаки пунктуации.
//}----------------------------------------------------------------------------

int    BackStringComp (const void *void_str1, const void *void_str2);

//{----------------------------------------------------------------------------
//! Компаратор для структуры string.
//}----------------------------------------------------------------------------

int    StringComp     (const void *void_str1, const void *void_str2);

//{----------------------------------------------------------------------------
//! \brief Проверяет является ли строка римcкой
//!        цифрой или набором из римских цифр.
//!
//! \param [in] - проверяемая строка;
//}----------------------------------------------------------------------------

bool   isChapterTitle (const char* str);

//{----------------------------------------------------------------------------
//! \brief Записывает все символы файла в буффер и.
//!        преобразует их в массив отсортированных строк
//!
//! \param [in] file_name - имя читаемого файла;
//! \param [in] text      - адрес указателя на начало массива
//!                         строк, в который будут записываться
//!                         содержательные строки файла
//!                        (все кроме пустых строк, названий глав и тд);
//! \param [in] buffer    - адрес указателя на начало массива символов,
//!                         в который записываются символы файла file_name;
//!
//! \return Количество записанных "содержательных" строк в *text.
//}----------------------------------------------------------------------------

size_t ReadFile       (const char *file_name,  string **text, char   **buffer);

//{----------------------------------------------------------------------------
//! \brief Копирует текст в массив и возврашает указатель на его начало.
//!
//! \param [in] Text   - указатель на массив строк;
//! \param [in] nLines - размер массива строк;
//!
//! \return Возвращает указатель на начало скопированного массива строк.
//}----------------------------------------------------------------------------

string *CopyText      (string *Text, size_t nLines);

bool   ispoint        (char ch);

//{----------------------------------------------------------------------------
//! \brief Вспомогательная функция для PrintRhymes()
//!
//! \param [in] file       - файл, в который ведется запись;
//! \param [in] rhymes     - массив строк, в котором близкие
//!                          строки рифмуются;
//! \param [in] num1,2,3,4 - номер строк в массиве rhymes;
//!
//! \return Количество записанных непустых строк.
//}----------------------------------------------------------------------------

size_t DoRhyme        (FILE *file, const string* rhymes, int num1, int num2,
                                                         int num3, int num4);

